@model LeaveON.Models.DynamicFormViewModel

@{
  ViewBag.Title = "Create";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/css/bootstrap-select.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.1/js/bootstrap-select.min.js"></script>


<!-- DataTables -->
<link rel="stylesheet" href="../../plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="../../plugins/datatables-responsive/css/responsive.bootstrap4.min.css">

<!-- left column -->
<div class="col-md-12">
  <!-- general form elements -->
  <div class="card card-warning">
    <div class="card-header">
      <h3 class="card-title">Dyncamic Form</h3>
    </div>
    <!-- /.card-header -->
    <!-- form start -->


    @using (Html.BeginForm())
    {
      @Html.AntiForgeryToken()

  <div class="card-body">
    <div class="row">
      <div class="col-md-4">
        <div class="form-group">
          @Html.LabelFor(model => model.FName, "Form Name", htmlAttributes: new { @class = " " })
          @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control", required = "required " } })
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          @Html.LabelFor(model => model.TName, "Table Name", htmlAttributes: new { @class = " " })
          @Html.EditorFor(model => model.TName, new { htmlAttributes = new { @class = "form-control", required = "required " } })
        </div>
      </div>
      <div class="col-md-4">
        <div class="form-group">
          @Html.CheckBoxFor(model => model.IsAutoTruncate)
          @Html.LabelFor(model => model.IsAutoTruncate, "Auto Truncate", htmlAttributes: new { @class = " " })
          @Html.ValidationMessageFor(model => model.IsAutoTruncate, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>

    @if (ViewBag.IsError != null && ViewBag.IsError == true)
    {
      <div class="row">
        <div class="col-md-12">
          <div class="alert alert-danger alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">X</button>
            <h5><i class="icon fas fa-ban"></i> Alert!</h5>
            @Html.ValidationSummary(false, "", new { @class = "" })
          </div>
        </div>
      </div>
    }


    <section class="content">
      <div class="row">
        <div class="col-12">
          <div class="card">
            <div class="card-header">
              <h3 class="card-title">Columns</h3>
              <br />
              <hr />

              <div d="example2_wrapper" class="dataTables_wrapper dt-bootstrap4">
                <div class="row">
                  <div class="col-sm-12 col-md-6">
                  </div>
                  <div class="col-sm-12 col-md-6"></div>
                </div>
                <div class="row">
                  <div class="col-sm-12">

                    <table id="tableColumns" class="table table-bordered table-hover dataTable dtr-inline" role="grid">
                      <thead>
                        <tr>

                          <th>Name</th>
                          <th>Data Type</th>
                          <th>Length</th>
                          <th>Min</th>
                          <th>Max</th>
                          <th>Not Null</th>
                          <th>Primary Key</th>
                          <th></th>

                        </tr>
                      </thead>
                      <tbody>
                        @if (ViewBag.DynamicFormColumns != null)
                        {
                          int sNo = 0;
                          var columns = ViewBag.DynamicFormColumns as List<LeaveON.Models.DynamicFormColumnViewModel>;
                          if (columns.Count > 0)
                          {
                            foreach (var item in columns)
                            {

                              <tr>
                                <td style="display:none;"><input type="hidden" name="DynamicForm.Index" value="@sNo" /></td>
                                <td style="width:120px;"><input type="text" name="DynamicFormColumns[@sNo].ColumnName" class="form-control" value="@item.ColumnName" placeholder="Column Name"> </td>
                                <td> @Html.DropDownList("DynamicFormColumns[" + sNo + "].DataType", new SelectList(ViewBag.DataTypes, item.DataType), null, new { @class = "form-control", style = "width: 145px;" })</td>
                                <td><input type="number" name="DynamicFormColumns[@sNo].Length" value="@item.Length" class="form-control" placeholder="Length"> </td>
                                <td><input type="number" name="DynamicFormColumns[@sNo].Min" value="@item.Min" class="form-control" placeholder="Min"> </td>
                                <td><input type="number" name="DynamicFormColumns[@sNo].Max" value="@item.Max" class="form-control" placeholder="Max"> </td>
                                <td style="width:80px;"><input type="checkbox" name="DynamicFormColumns[@sNo].IsNullable" id="DynamicFormColumns[@sNo].IsNullable" onchange="checkValue('DynamicFormColumns[@sNo].IsNullable')" value="@item.IsNullable.ToString().ToLower()" @(item.IsNullable ? "checked" : "")> Not Null</td>
                                <td style="width:120px;"><input type="checkbox" name="DynamicFormColumns[@sNo].IsPrimaryKey" id="DynamicFormColumns[@sNo].IsPrimaryKey" onchange="checkValue('DynamicFormColumns[@sNo].IsPrimaryKey')" value="@item.IsPrimaryKey.ToString().ToLower()" @(item.IsPrimaryKey ? "checked" : "")> Primary Key</td>
                                <td> <a href="javascript:void(0);" class=" btn btn-danger removeRow">x</a></td>
                              </tr>

                              sNo += 1;
                            }
                          }

                        }
                      </tbody>
                    </table>
                    <input type="button" id="addBtn" value="Add Row" class="btn btn-default" style="background-color: #ffcc5c" />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

    </section>


    <div>
    </div>

    <br />

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default btn-Md" style="background-color:#FFBB00;width: 180px; margin-left:auto;margin-right:auto;display:block;margin-top:auto;margin-bottom:0%" />
      </div>
    </div>
    <div>
      @Html.ActionLink("Back to List", "Index")
    </div>
  </div>
    }

  </div>
</div>


<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
@*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>*@
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


<script>

  function checkValue(id){
    if (document.getElementById(id).checked) {
      document.getElementById(id).value = true;
    } else {
      document.getElementById(id).value = false;
    }
  }

  var addData = 0;
  $(document).ready(function () {
    var idxId = @ViewBag.srNo;

    //$('#multiSelectOffDays').multiselect({
    //      includeSelectAllOption: true
    //  });

    //displayAlert
     $("#displayAlert").on("click", function () {
          $('#customFields tr').each(function() {
            //var customerId = $(this).find(".customerIDCell").html();
            alert($(this).prop('outerHTML'));
            //alert($(this).prop('HTML'));//.prop('outerHTML'));
            //alert('hi');
          });
     });




    $("#AnnualOffDays").click(function () {
      //alert(addData);
      //$("#customFields").append('<tr>  <td style = "display:none;" > <input type="hidden" name="UserLeavePolicy.Index" value="' + addData + '" /></td><td><input type="text" class="form-control" name="UserLeavePolicy.Id[' + addData + ']" id="Id' + addData + '" value="" placeholder="No" style="width: 60px;" /></td> <td><input type="text" class="form-control" name="UserLeavePolicy.AnnualOffDays[' + addData + ']" id="LeaveDate' + addData + '" value="" placeholder="Date" /> <td><input type="text" class="form-control" name="UserLeavePolicy.Description[' + addData + ']" id="Description' + addData + '"  value="" placeholder="Description" /></td><td> <a href="javascript:void(0);" class="btn btn-danger AnnualOffDaysRemove">x</a></td></tr>');
      //<td style = "display:none;" > <input type="hidden" name="UserLeavePolicy.Index" value="' + addData + '" /></td>
      $("#customFields").append('<tr> <td style="display:none;"><input type="hidden" name="AnnualOffDay.Index" value="' + addData + '" /></td> <td><input type="text" class="form-control" name="AnnualOffDay[' + addData + '].OffDay" id="LeaveDate' + addData + '" value="" placeholder="Date" /> <td><input type="text" class="form-control" name="AnnualOffDay[' + addData + '].Description" id="Description' + addData + '"  value="" placeholder="Description" /></td><td> <a href="javascript:void(0);" class="btn btn-danger remAnnOffDay">x</a></td></tr>');

      //alert('<tr>  <td style = "display:none;" > <input type="hidden" name="userLeavePolicy.Index" value="' + addData + '" /></td><td><input type="text" class="form-control" name="id[' + addData + ']" id="id' + addData + '" value="" placeholder="No" style="width: 60px;" /></td> <td><input type="text" class="form-control" name="AnnualOffDays[' + addData + ']" id="AnnualOffDays' + addData + '" value="" placeholder="Date" /> <td><input type="text" class="form-control" name="Description[' + addData + ']" id="Description' + addData + '"  value="" placeholder="Description" /></td><td> <a href="javascript:void(0);" class="btn btn-danger AnnualOffDaysRemove">x</a></td></tr>');
      //addData = parseInt(addData) + parseInt(1);
      addData += 1;

      $(".remAnnOffDay").on('click', function () {
          $(this).parent().parent().remove();
      });

    });

     $("#addBtn").on("click", function () {
        $.get('@Url.Action("AddNewRow")?IndexId=' + idxId , function (data) {
          $("#tableColumns").append(data);

             idxId += 1;
              $(".removeRow").on('click',function(){
		    	        $(this).parent().parent().remove();
              });
        });

     });

    $(".removeRow").on('click', function () {
      $(this).parent().parent().remove();
    });

    $('#btnUpload').click(function () {

      // Checking whether FormData is available in browser
      if (window.FormData !== undefined) {

        var fileUpload = $("#FileUpload1").get(0);
        var files = fileUpload.files;

        // Create FormData object
        var fileData = new FormData();

        // Looping over all files and add it to FormData object
        for (var i = 0; i < files.length; i++) {
          fileData.append(files[i].name, files[i]);
        }

        // Adding one more key to FormData object
        //fileData.append('username', 'Manas');
        //alert('1');
        $.ajax({
          url: '/UserLeavePolicies/UploadFiles',
          type: "POST",
          contentType: false, // Not to set any content header
          processData: false, // Not to process data
          data: fileData,
          success: function (result) {
            //alert(result);
            //alert('4');
            $("#NewData").html(result);
          },
          error: function (err) {
            alert(err.statusText);
            //alert('5');
          }
        });
      } else {
        alert("FormData is not supported.");
      }

    });

    //$('#rdoDepartments').change(function () {
    //   //var end = this.value;
    //   //var firstDropVal = $('#saleType').val();
    //   update_itemTotal();
    //});


    //if (document.getElementById('yesCheck').checked) {
    //    document.getElementById('ifYes').style.display = 'block';
    //}
    //else document.getElementById('ifYes').style.display = 'none';


    $('input:radio[name=PolicyFor]').change(function () {
      if (this.value == '1') {
        $("#divDep").show();
        $("#divEmp").hide();
      }
      else if (this.value == '0') {
        $("#divEmp").show();
        $("#divDep").hide();
      }
    });



    $("#multiSelectOffDays").change(function () {
      //alert('hi');
      var dropdownVal = $(this).val();
      $("#userLeavePolicy_WeeklyOffDays").val(dropdownVal);
      //alert(dropdownVal);
    });

    //$('#listDepartments').attr('data-live-search', true);

    //$('.selectCountry').selectpicker(
    //{
    //    width: '100%',
    //    title: '- [Choose Country] -',
    //    style: 'btn-warning',
    //    size: 6
    //});

    //$('#listEmployees').attr('data-live-search', true);



  });

  $(function () {
    $("#datepickerStart").datepicker({
      showOtherMonths: true,
      selectOtherMonths: true,
      changeMonth: true,
      changeYear: true,
      numberOfMonths: 2
      //showButtonPanel: true

      //showOn: "button",
      //buttonImage: "images/calendar.gif",
      //buttonImageOnly: true,
      //buttonText: "Select date",

      //minDate: -20,
      //maxDate: "+1M +10D"
    });
    $("#datepickerEnd").datepicker({
      showOtherMonths: true,
      selectOtherMonths: true,
      changeMonth: true,
      changeYear: true,
      numberOfMonths: 2,
      onSelect: function () {
        myfunc();

      }
    });



    //showButtonPanel: true


    //showOn: "button",
    //buttonImage: "images/calendar.gif",
    //buttonImageOnly: true,
    //buttonText: "Select date",

    //minDate: -20,
    //maxDate: "+1M +10D"

  });
</script>







@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}



